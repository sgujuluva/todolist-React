[{"/home/user/app/REACT/todolist-react/src/index.js":"1","/home/user/app/REACT/todolist-react/src/App.js":"2","/home/user/app/REACT/todolist-react/src/components/todolist/index.jsx":"3","/home/user/app/REACT/todolist-react/src/components/forms/index.jsx":"4","/home/user/app/REACT/todolist-react/src/components/ContextFun.jsx":"5"},{"size":341,"mtime":1661254024680,"results":"6","hashOfConfig":"7"},{"size":363,"mtime":1661256071604,"results":"8","hashOfConfig":"7"},{"size":1532,"mtime":1663343674143,"results":"9","hashOfConfig":"7"},{"size":1338,"mtime":1661849642620,"results":"10","hashOfConfig":"7"},{"size":450,"mtime":1663834791300,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"3vw9av",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/app/REACT/todolist-react/src/index.js",[],[],[],"/home/user/app/REACT/todolist-react/src/App.js",["30","31","32","33"],[],"import {useState} from \"react\"\n//styles\nimport './App.css';\nimport Forms from './components/forms';\nimport ToDoList from './components/todolist';\n\nfunction App() {\n  const [input,setInput] = useState(\"\");\n  const [todos,setTodos] = useState([]);\n  return (\n    <div className=\"App\">\n      <Forms />\n      <ToDoList/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","/home/user/app/REACT/todolist-react/src/components/todolist/index.jsx",["34","35"],[],"/home/user/app/REACT/todolist-react/src/components/forms/index.jsx",["36","37","38"],[],"import { hasSelectionSupport } from \"@testing-library/user-event/dist/utils\";\nimport { context } from \"../ContextFun\";\nimport React, { useContext } from \"react\";\nimport ToDoList from \"../todolist\";\n//styles\nimport \"./forms.css\";\nfunction Forms() {\n  const { input, setInput, todos, setTodos, options, setOptions } =\n    useContext(context);\n  console.log(input.value);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setTodos([...todos, input]);\n    setInput({ value: \"\", isCompleted: false }); //setting to initial\n  };\n  console.log(\"todos\", todos);\n  return (\n    <>\n    <h1>To-do list - REACT</h1>\n    <div className=\"form-style\">\n     \n      <form onSubmit={handleSubmit}>\n        <input\n          required\n          value={input.value}\n          onChange={(e) => setInput({ ...input, value: e.target.value })}\n          type=\"text\"\n          placeholder=\"Enter a task\"\n        />{\" \"}\n        {/* // bcs its an obj using .value */}\n        <button type=\"submit\">Add</button>\n        \n         \n      \n      </form>\n      <select onChange={(e) => setOptions(e.target.value)} name=\"todos\">\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"uncompleted\">Uncompleted</option>\n          </select>\n    </div>\n    </>\n  );\n}\n\nexport default Forms;\n","/home/user/app/REACT/todolist-react/src/components/ContextFun.jsx",[],[],{"ruleId":"39","severity":1,"message":"40","line":8,"column":10,"nodeType":"41","messageId":"42","endLine":8,"endColumn":15},{"ruleId":"39","severity":1,"message":"43","line":8,"column":16,"nodeType":"41","messageId":"42","endLine":8,"endColumn":24},{"ruleId":"39","severity":1,"message":"44","line":9,"column":10,"nodeType":"41","messageId":"42","endLine":9,"endColumn":15},{"ruleId":"39","severity":1,"message":"45","line":9,"column":16,"nodeType":"41","messageId":"42","endLine":9,"endColumn":24},{"ruleId":"39","severity":1,"message":"46","line":7,"column":5,"nodeType":"41","messageId":"42","endLine":7,"endColumn":10},{"ruleId":"39","severity":1,"message":"47","line":12,"column":37,"nodeType":"41","messageId":"42","endLine":12,"endColumn":47},{"ruleId":"39","severity":1,"message":"48","line":1,"column":10,"nodeType":"41","messageId":"42","endLine":1,"endColumn":29},{"ruleId":"39","severity":1,"message":"49","line":4,"column":8,"nodeType":"41","messageId":"42","endLine":4,"endColumn":16},{"ruleId":"39","severity":1,"message":"50","line":8,"column":45,"nodeType":"41","messageId":"42","endLine":8,"endColumn":52},"no-unused-vars","'input' is assigned a value but never used.","Identifier","unusedVar","'setInput' is assigned a value but never used.","'todos' is assigned a value but never used.","'setTodos' is assigned a value but never used.","'check' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'hasSelectionSupport' is defined but never used.","'ToDoList' is defined but never used.","'options' is assigned a value but never used."]